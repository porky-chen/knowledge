/*
* SSR框架
*/
// 什么情况下应该选择SSR框架渲染
1、需要在Node.js与前端框架结合使用的场景使用，SSR框架是转为服务端渲染场景 或者 Node.js与前端结合的场景
2、需要开箱即用的服务端渲染能力，不需要手动去组和 不同的 前端框架 与 服务端框架 之间的联系
3、需要框架层面的渲染降级能力，在服务端渲染(SSR)出错时自动降级为客户端渲染(CSR)
4、需要一个配置简单逻辑清晰的框架，SSR框架的渲染逻辑和应用构建逻辑是同类框架中最清晰的
5、可能会改动技术栈，如从vue2升级到vue3，从vue3降级到vue2,或react\vue相互切换
6、需要在服务端渲染场景下开箱即用使用antd,vant等流行UI框架
7、需要同时支持Webpack、Vite两种开发工具，以便同时得到快速的启动速度HMR速度以及稳定的生产环境代码

// 优点 -> 评估SEO和内容到达时间是否对应用至关重要来考虑使用 SSR或CSR
1、服务端和客户端共用代码
2、更快的页面内容到达时间
3、更友好的SEO
4、更优雅的降级方式，更强壮的应用

